<h1>About</h1>
<p>This is <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<p>目前的 cmsimde 在編輯器下方新增一個 csave 按鈕, 意即 collabrative save, 當動態網際管理系統在多人同時維護登入維護網頁內容時, 編輯各頁面時段, 該頁面可能已經改版, 因此使用 csave 按鈕存檔時, 會導入當下最新的該頁面內容, 並試圖與編輯中的頁面內容進行合併.</p>
<p>使用 csave 按鈕存檔無法刪除頁面資料.</p>
<p>使用 Edit All 模式, 無法使用 csave 按鈕（尚未測試).</p>
<h1>小組成員</h1>
<p><a href="https://40923105.github.io/wcm2021-ag2/content/index.html">wcm2021-ag2</a><br/><a href="https://40923105.github.io/wcm2021">40923105 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923105/wcm2021">40923105 repo</a><span><span> </span>|<span> </span></span><a href="https://40923105.github.io/wcm2021-ag2">grp web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923105/wcm2021-ag2">grp repo</a><span></span><br/><a href="https://40923104.github.io/wcm2021">40923104 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923104/wcm2021">40923104 repo</a><span><span> </span>|<span> </span></span><a href="https://40923104.github.io/wcm2021-ag2">grp web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923104/wcm2021-ag2">grp repo</a><span></span><br/><a href="https://40923107.github.io/wcm2021">40923107 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923107/wcm2021">40923107 repo</a><span><span> </span>|<span> </span></span><a href="https://40923107.github.io/wcm2021-ag2">grp web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923107/wcm2021-ag2">grp repo</a><span></span><br/><a href="https://40923110.github.io/wcm2021">40923110 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923110/wcm2021">40923110 repo</a><span><span> </span>|<span> </span></span><a href="https://40923110.github.io/wcm2021-ag2">grp web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923110/wcm2021-ag2">grp repo</a><span></span><br/><a href="https://40923102.github.io/wcm2021">40923102 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923102/wcm2021">40923102 repo</a><span><span> </span>|<span> </span></span><a href="https://40923102.github.io/wcm2021-ag2">grp web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923102/wcm2021-ag2">grp repo</a><span></span><br/><a href="https://40923106.github.io/wcm2021">40923106 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923106/wcm2021">40923106 repo</a><span><span> </span>|<span> </span></span><a href="https://40923106.github.io/wcm2021-ag2">grp web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923106/wcm2021-ag2">grp repo</a></p>
<h1>每周上課進度</h1>
<h2>W1-W2</h2>
<p><br/><strong>網際內容管理課程簡介</strong><br/><span>從 </span><a href="http://a.kmol.info:88/">http://a.kmol.info:88</a><span><span> </span>取下 Python 3.9.1 版的可攜程式系統，</span>下載<a href="https://drive.google.com/file/d/1oJPgppmLSQtx0SDrs4QKOs_YgWDDv2fj/view?usp=sharing">kmol2021_spring_v1</a>和 <a href="https://drive.google.com/file/d/1R6vAAWdNDigmyvFFQTKyM-XNKOWeCFJU/view?usp=sharing">kmol2021_spring_v2</a></p>
<h2>W3</h2>
<p>分組，自選組員，至多六個人一組</p>
<p><span>第二組組員：40923102、40923104、40923105、40923106、40923107、40923110</span></p>
<h2>W4</h2>
<p>處理前三週遇到的問題</p>
<h2>W5</h2>
<p><span>老師教我們如何更新cmsimde。</span></p>
<h2>W6</h2>
<p>建立一個Heroku帳號並到<a href="http://a.kmol.info:88/">http://a.kmol.info:88/</a>下載heroku.7z。</p>
<p><span><span style="color: #000000; background-color: #ffff00;">步驟一</span>:</span><span> </span>(<span>建立 Heroku 帳號</span>) 進入<span> </span><a href="https://heroku.com/">https://heroku.com</a>，利用學校信箱登記一個 Heroku 帳號，登記後要進入學校信箱進行確認後才能開通 Heroku 帳號。</p>
<p>Heroku 只允許免費建立五個應用程式,，且每個程式的<span style="color: #000000;">最大容量</span>為 500MB。</p>
<p><span><span style="background-color: #ffff00;">步驟二</span>:</span><span> </span>(<span>建立 Heroku app</span>) 登入 Heroku 後, 先以 s + 學號 建立第一個 app，完成後, 將可至 https://s學號.herokuapp.com 連線取得網站最初內容。</p>
<p><span><span style="background-color: #ffff00;">步驟三</span>:</span><span> </span>(下載 Heroku CLI) 從<span> </span><a href="http://a.kmol.info:88/heroku.7z">http://a.kmol.info:88/heroku.7z</a><span> </span>下載 Heroku.7z，解壓縮至隨身碟 Y: 所在位置或者是 Hybrid 設定的位置。</p>
<h2>W7</h2>
<p><span></span></p>
<p>設定Heroku同步github。</p>
<p>須先完成上週的步驟一到步驟三，才能繼續接下來的動作。</p>
<p><span><span style="background-color: #ffff00;">步驟四</span>:</span><span> </span>(<span>修改命令搜尋路徑</span>) 修改隨身系統的啟動批次檔案， 讓 Windows 的命令視窗中可以執行 heroku.exe，或稱作"設法將 heroku.exe 所在目錄位置，設為 Windows 搜尋路徑之一"再重新啟動隨身碟的start_ipv4.bat。</p>
<p><span><span style="background-color: #ffff00;">步驟五</span>:</span><span> </span>(<span>測試 heroku 執行</span>) 在命令列輸入 heroku version 若回應所使用的版本表示上述路徑設定已經成功。</p>
<p><span><span style="background-color: #ffff00;">步驟六</span>:</span><span> </span>(<span>設定 heroku 代理主機</span>) 先前我們已經知道網路的應用包含 client 與 server，不同 client 採用不同的 proxy 設定與 server 連線，其中 firefox 作為 WWW 網路協定的 client，有其自己的網路 Proxy 設定，也可以直接使用操作系統的 Proxy 設定。</p>
<p>Chrome 作為 WWW 網路協定的 client，目前 Windows 下的最新版，只能使用操作系統的 Proxy 設定。</p>
<p>而 git 作為 git client 與 github server 連線的 Proxy 設定，則寫在 y:\home_ipv6 下的 .giconfig 中，  以 git config --global http.proxy "http://your_proxy:port" 進行設定。</p>
<p>相同的道理 heroku cli 作為<span> </span><a href="https://heroku.com/">https://heroku.com</a><span> </span>伺服器的 client 端, 也有其 Proxy 的設定方式, 也就是在 start_ipv6.bat 中加入:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_880606">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">REM </code><code class="js keyword">for</code> <code class="js plain">heroku login</code></div>
<div class="line number2 index1 alt1"><code class="js plain">set HTTP_PROXY=http:</code><code class="js comments">//[2001:288:6004:17::53]:3128</code></div>
<div class="line number3 index2 alt2"><code class="js plain">set HTTPS_PROXY=http:</code><code class="js comments">//[2001:288:6004:17::53]:3128</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><span><span style="background-color: #ffff00;">步七驟</span>:</span><span> </span>(<span>設定同步倉儲</span>) 利用 Heroku 同步 Github Pages 上的網站內容，只需透過 git remote add (Heroku 指令為 heroku git:remote -a heroku_倉儲_名稱，之後只要在 heroku login 狀態下，可以直接利用 git push) 在近端設定一個連線到 Heroku 倉儲的代號，就能在每次更新 Github Pages 倉儲後，順便將內容同步至 Heroku。網際內容管理課程將使用兩種 Heroku app 設定，也就是靜態網頁與動態網頁:</p>
<p>靜態網頁 - 採用 php 方式部署, 讓 Heroku 將靜態網頁視為 PHP 程式, 利用 index.php 跳轉到 index.html</p>
<p>動態網頁 - 讓 Heroku 執行 cmsimde/wsgi.py 的方式進行雲端伺服.</p>
<p><span><span style="background-color: #ffff00;">步驟八</span>:</span><span> </span>(<span>以 git 進行提交推送</span>) 利用 heroku git:remote -a 設定的同步倉儲其推送名稱內定為 "heroku"，使用者只要使用 git push heroku 就可將改版內容推送到對應的 Heroku app 倉儲。</p>
<p>指令操作步驟:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_733726">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># 以 interactive 模式登入 Heroku, 完成後產生 y:\home_ipv6\_netrc</code></div>
<div class="line number2 index1 alt1"><code class="py plain">heroku login </code><code class="py keyword">-</code><code class="py plain">i</code></div>
<div class="line number3 index2 alt2"><code class="py comments"># 針對已經登入的 Heroku 帳號下的 taiwan-01 app, 設為此倉儲的 remote 同步倉儲, 且在倉儲中會自建名稱為 heroku 的 remoate site.</code></div>
<div class="line number4 index3 alt1"><code class="py plain">heroku git:remote </code><code class="py keyword">-</code><code class="py plain">a taiwan</code><code class="py keyword">-</code><code class="py plain">no1</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>上述步驟完成後的 Heroku 網站:<span> </span><a href="https://taiwan-no1.herokuapp.com/">https://taiwan-no1.herokuapp.com</a></p>
<h2>W8</h2>
<p>老師講解如何從學校主機拉出課表。</p>
<p>綜一館0810:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">import requests
import bs4
# for os.environ and os.system
import os
# for geting html file path
import pathlib

# for pythn 3.9


'''
url: 'jclassroom_ajax.php',
data: { pselyr: pselyr, pselclssroom: pselclssroom },
'''
semester = '1092'
classroomno = 'BGA0830'
column = True

if semester == None:
semester = '1092'
if classroomno == None:
# BGA0810 電腦輔助設計室
classroomno = 'BGA0810'

headers = {'X-Requested-With': 'XMLHttpRequest'}

url = 'https://qry.nfu.edu.tw/jclassroom_ajax.php'
post_var = {'pselyr': semester, 'pselclssroom': classroomno}

result = requests.post(url, data = post_var, headers = headers)

soup = bs4.BeautifulSoup(result.content, 'lxml')

# 先除掉所有 anchor
for a in soup.findAll('a'):
# bs3 語法
#a.replaceWithChildren()
# bs4 語法, 將標註與內容拆開
a.unwrap()

# 根據輸出設定, 取出 class='tbcls' 的 table 資料
table = soup.find('table', {'class': 'tbcls'})

# 重建 table, 設定邊線為 1 pixel
output = "&lt;table border='1'&gt;"

for i in table.contents:
# 利用 replace 復原
output += str(i).replace("&amp;nbsp", " ")
output += "&lt;/table&gt;"
#print(output)

# 將 output 寫入 w1_classroom.html
fileName = "w1_classroom.html"
with open(fileName, "w", encoding="utf-8") as file:
file.write(output)
# 利用 os.system() 以 default browser 開啟 w1_class_local.html
filePath = pathlib.Path(__file__).parent.absolute()
#print(filePath)
# set firefox as default browser and start url to open html file
os.system("start file:///" + str(filePath) + "\\" + fileName)</pre>
<p><br/><br/></p>
<h2>W9</h2>
<p>打期中的期望成績和報告自己小組的倉儲內容。</p>
<h2>W10</h2>
<p>1.到 <a href="http://a.kmol.info:88/">http://a.kmol.info:88/</a>下載 robodk_kmol.7z。</p>
<p>2.到 <a href="https://sqlitebrowser.org/dl/">https://sqlitebrowser.org/dl/</a>下載 DB Browser for SQlite - .zip(no installer) for 64-bit 。</p>
<h2>W11</h2>
<p>1.到 <a href="http://a.kmol.info:88/">http://a.kmol.info:88/</a>下載robodk522_portable 。</p>
<p>2.執行 <span>robodk</span></p>
<h2>W12</h2>
<p>OBS+Youtube 測試直播</p>
<p></p>
<h2>W13</h2>
<p>第一周遠距教學</p>
<h2>W14</h2>
<p>在線上表單上找到自己的組別，並填上學號和github account。</p>
<h2>W15</h2>
<p>1.線上表單填寫--學期自評分數、課程遭遇問題、課程至今學習心得</p>
<p>2.老師講解同學提出的問題</p>
<p>3.小組錄製討論影片並放到分組網站上</p>
<h2>W16</h2>
<p>錄製fossil操作影片</p>
<p><a href="https://youtu.be/iP3BWDmkl3o">W16 fossil 操作影片</a></p>